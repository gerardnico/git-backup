#!/bin/bash
# Execute a git command into a repo

set -Eeuo pipefail
source bashlib-echo.sh
source bashlib-error.sh
error::set_trap


# The root directory where all repository may be the children
GITALL_CODE_HOME=${GITALL_CODE_HOME:-$HOME/code}
GIT_REPO_DIR="${GITALL_CODE_HOME}/$1"
if [ ! -d "$GIT_REPO_DIR/.git" ]; then
  echo::err "$GIT_REPO_DIR is not a git repository"
  exit 1
fi

# delete the first argument
shift

pushd "$GIT_REPO_DIR" >/dev/null
GIT_COMMAND=$1
shift

ARGS=${@}
if [ "$GIT_COMMAND" == "diff" ]; then
  ARGS+=("-c")
  ARGS+=("color.ui=always")
fi


if ! OUTPUT=$(eval "git" "$GIT_COMMAND" "$(printf '%q' "$ARGS")"); then
  echo::err "The command ${GIT_COMMAND} "${ARGS}" has error"
  popd > /dev/null
  exit 1
fi

# remove the space and test if not of length zero
if [[ ! -z ${OUTPUT// } ]]; then
  echo::echo ""
  echo::echo "$OUTPUT"
fi

popd >/dev/null


